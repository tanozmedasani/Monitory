<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net" />
  </configSections>
  <connectionStrings>
    <add name="ConnectionString" connectionString="Persist Security Info=False;Initial Catalog=yourDatabase;Data Source=YourDatabaseServer;User ID=yourUser;pwd=yourPassword;" />
  </connectionStrings>
  <appSettings>
    <add key="ShouldLoadJobsFromConfig" value="true" />
    <add key="ServiceName" value="Monitory" />
    <add key="ServiceDescription" value="Monitory - Directory and file monitoring service1" />
    <add key="MinutesBetweenCheckingForNewMonitorJobs" value="15" />
    <add key="RetryIntervalInSeconds" value="60" />
    <add key="HourToStartMonitoring" value="7" />
    <add key="HourToStopMonitoring" value="18" />
    <add key="Source" value="DirectoryMonitor(ServerName)" />
    <add key="EmailToList" value="someone@somewhere.com|someoneElse@somewhere.com" />
    <add key="EmailFrom" value="monitory Folder Monitor Service" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <log4net debug="false">
    <root>
      <level value="DEBUG" />
      <appender-ref ref="ColoredConsoleAppender" />
      <appender-ref ref="RollingFileAppender" />
      <!--<appender-ref ref="LimitedSmtpAppender" />-->
      <!--<appender-ref ref="SmtpAppender" />-->
    </root>
    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <threshold value="FATAL" />
      <to value="someone@somewhere.com" />
      <from value="monitoryService on YourServerName" />
      <subject value="monitoryService CRASHED: Error: (your Servername)" />
      <smtpHost value="10.1.13.80" />
      <bufferSize value="0" />
      <lossy value="false" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%newline%date [%thread] %-5level %logger [%property{NDC}] - %message%newline%newline%newline" />
      </layout>
    </appender>
    <appender name="LimitedSmtpAppender" type="log4net.Extensions.SmtpCachingAppender">
      <threshold value="WARN" />
      <to value="you@somehwere.com" />
      <from value="monitory@somehwere.com" />
      <subject value="monitory Error: DEV" />
      <smtpHost value="10.1.1.10" />
      <bufferSize value="0" />
      <lossy value="false" />
      <priority value="high" />
      <FlushInterval value="00:05:00" />
      <FlushCount value="0" />
      <MaxBufferSize value="10" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%date{yyyy-MM-dd HH:mm:ss.fff} [%-2thread] [%-5level] [%logger] %message%newline%exception" />
      </layout>
    </appender>
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <target value="Console.Error" />
      <mapping>
        <level value="FATAL" />
        <foreColor value="Red" />
        <backColor value="White" />
      </mapping>
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="WARN" />
        <foreColor value="Yellow" />
      </mapping>
      <mapping>
        <level value="INFO" />
        <foreColor value="Cyan" />
      </mapping>
      <mapping>
        <level value="DEBUG" />
        <foreColor value="Green" />
      </mapping>
      <layout type="log4net.Layout.SimpleLayout" />
    </appender>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="..\logs\monitory.log" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
      </layout>
    </appender>
  </log4net>
  </configuration>